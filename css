import xlsxwriter
import glob
import selenium
import sys
sys.setrecursionlimit(100000)
from datetime import datetime
from time import gmtime, strftime, localtime
start_time = datetime.now()
from selenium import webdriver
from bs4 import BeautifulSoup as soup
import pandas as pd
import os
import time
import csv
import re
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
import random
from selenium.webdriver.common.keys import Keys
import json
from urllib.parse import quote



def html_soup(browser):
    return soup(browser.page_source,"html.parser")

def zip_code_setter(browser, zip_code) :
    #run just once
    browser.get("https://www.amazon.com/")
    loaded = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.ID, "nav-global-location-popover-link")))
    button_clicker(browser, "nav-global-location-popover-link", "id",0,True)
    time.sleep(1)
    loaded = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.ID, "GLUXZipUpdateInput")))
    
    box = browser.find_element_by_id('GLUXZipUpdateInput')
    box.clear()
    
    box.send_keys(zip_code)
    box.send_keys(Keys.RETURN)
    
    loaded = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.ID, "GLUXConfirmClose")))
    button_clicker(browser, "GLUXConfirmClose", "id",0,True)
    
    return True

def delivery_time_getter(browser,link) :
    browser.get(link)
    page_soup = html_soup(browser)
    free_del = page_soup.findAll("div",{"id" : "deliveryBlockMessage"})[0].text.strip()
    return free_del
    



zip_code_setter(driver, "10128")


link= "https://www.amazon.com/Sonos-Move-Battery-powered-Bluetooth-built/dp/B07W95RBZM/"


delivery_time_getter(driver,link)




def button_clicker(browser, button_id, by_what, element_count_presence_limit, kill_on_one_iteration = False,nth_no_of_element = False) :
    actions = ActionChains(browser)
    if by_what == "class_name" :
        count = 0
        while len(browser.find_elements_by_class_name(button_id))>element_count_presence_limit :
            if nth_no_of_element == False :
                for i in browser.find_elements_by_class_name(button_id) :
                    try :
                        actions = ActionChains(browser)
                        actions.move_to_element(i).perform()
                        #browser.execute_script("arguments[0].scrollIntoView();", i)
                        i.click()
                        time.sleep(0.5)   
                    except :
                        pass
            else :
                i = browser.find_elements_by_class_name(button_id)[nth_no_of_element]
                try :
                    actions = ActionChains(browser)
                    actions.move_to_element(i).perform()
                    #browser.execute_script("arguments[0].scrollIntoView();", i)
                    i.click()
                    time.sleep(0.5)   
                except :
                    pass
            count = count + 1
            if count > 0 :
                print("click stuck breaker")
                break
                break               
            if kill_on_one_iteration == True :
                print("here tried to break it")
                break
                break
                
    if by_what == "id" :
        count = 0
        while len(browser.find_elements_by_id(button_id))>element_count_presence_limit :
            for i in browser.find_elements_by_id(button_id) :
                try :
                    actions = ActionChains(browser)
                    actions.move_to_element(i).perform()
                    #browser.execute_script("arguments[0].scrollIntoView();", i)
                    i.click()
                    time.sleep(0.5)   
                except :
                    pass
            count = count + 1
            if count > 0 :
                print("click stuck breaker")
                break
                break               
            if kill_on_one_iteration == True :
                print("here tried to break it")
                break
                break

    if by_what == "xpath" :
        count = 0
        while len(browser.find_elements_by_xpath(button_id))>element_count_presence_limit :
            for i in browser.find_elements_by_xpath(button_id) :
                try :
                    actions = ActionChains(browser)
                    actions.move_to_element(i).perform()
                    #browser.execute_script("arguments[0].scrollIntoView();", i)
                    i.click()
                    time.sleep(0.5)   
                except :
                    pass
            count = count + 1
            if count > 0 :
                print("click stuck breaker")
                break
                break               
            if kill_on_one_iteration == True :
                print("here tried to break it")
                break
                break
    #add more if needed
            
